name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t persocode-backend:latest -f ../../backend/Dockerfile backend/
        docker build -t persocode-frontend:latest -f ../../frontend/Dockerfile frontend/
        docker tag persocode-backend:latest rtneust/persocode-backend:latest
        docker tag persocode-frontend:latest rtneust/persocode-frontend:latest
        docker push rtneust/persocode-backend:latest
        docker push rtneust/persocode-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Update the ECS task definition with new image tags
    - name: Register new ECS task definition
      id: task-def
      run: |
        export NEW_TASK_DEF=$(aws ecs describe-task-definition --task-definition task-test-1)
        export UPDATED_TASK_DEF=$(echo $NEW_TASK_DEF | jq --arg IMAGE_BACKEND "rtneust/persocode-backend:latest" --arg IMAGE_FRONTEND "rtneust/persocode-frontend:latest" '.taskDefinition | .containerDefinitions[0].image = $IMAGE_BACKEND | .containerDefinitions[1].image = $IMAGE_FRONTEND')
        echo "$UPDATED_TASK_DEF" > new-task-def.json
        aws ecs register-task-definition --cli-input-json file://new-task-def.json | jq -r '.taskDefinition.taskDefinitionArn'

    # Deploy the new task definition to ECS service
    - name: Deploy to Amazon ECS
      run: |
        NEW_TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition task-test-1 --query 'taskDefinition.taskDefinitionArn' --output text)
        aws ecs update-service \
          --cluster cluster-test-1 \
          --service service-test-1 \
          --task-definition $NEW_TASK_DEF_ARN \
          --force-new-deployment